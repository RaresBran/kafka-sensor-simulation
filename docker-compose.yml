version: '4.29.0'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'false'

  rest-proxy:
    image: confluentinc/cp-kafka-rest:latest
    container_name: rest-proxy
    depends_on:
      - kafka
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:29092
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    ports:
      - "8082:8082"

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    depends_on:
      - kafka
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:29092"
      JVM_OPTS: "-Xms32M -Xmx64M"

  nimbus:
    image: storm-java21
    container_name: nimbus
    command: storm nimbus
    environment:
      - NIMBUS_SEEDS=nimbus
    ports:
      - "6627:6627"
      - "8081:8080"
    depends_on:
      - zookeeper

  supervisor1:
    image: storm-java21
    container_name: supervisor1
    command: storm supervisor
    environment:
      - NIMBUS_SEEDS=nimbus
    depends_on:
      - zookeeper
      - nimbus

  supervisor2:
    image: storm-java21
    container_name: supervisor2
    command: storm supervisor
    environment:
      - NIMBUS_SEEDS=nimbus
    depends_on:
      - zookeeper
      - nimbus

  ui:
    image: storm-java21
    container_name: storm_ui
    command: storm ui
    environment:
      - NIMBUS_SEEDS=nimbus
    ports:
      - "8080:8080"
    depends_on:
      - nimbus

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: timescaledb
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: sensor-data
    ports:
      - "5432:5432"
    volumes:
      - ./timescaledb/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - timescaledb_data:/var/lib/postgresql/data

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - timescaledb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_NAME=viewer
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  redis:
    image: redis:7.0.15-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  maildev:
    image: maildev/maildev:2.1.0
    container_name: maildev
    ports:
      - "1080:1080"  # Port for MailDev web interface
      - "1025:1025"  # Port for MailDev SMTP server

volumes:
  grafana_data:
  redis_data:
  timescaledb_data:
